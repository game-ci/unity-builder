name: cloud-runner-integrity

on:
  workflow_call:
    inputs:
      runGithubIntegrationTests:
        description: 'Run GitHub Checks integration tests'
        required: false
        default: 'false'
        type: string

permissions:
  checks: write
  contents: read
  actions: write
  packages: read
  pull-requests: write
  statuses: write
  id-token: write

env:
  AWS_REGION: eu-west-2
  AWS_DEFAULT_REGION: eu-west-2
  AWS_STACK_NAME: game-ci-team-pipelines
  CLOUD_RUNNER_BRANCH: ${{ github.ref }}
  DEBUG: true
  PROJECT_PATH: test-project
  USE_IL2CPP: false

jobs:
  tests:
    name: Cloud Runner Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test:
          - 'cloud-runner-end2end-locking'
          - 'cloud-runner-end2end-caching'
          - 'cloud-runner-end2end-retaining'
          - 'cloud-runner-caching'
          - 'cloud-runner-environment'
          - 'cloud-runner-image'
          - 'cloud-runner-hooks'
          - 'cloud-runner-local-persistence'
          - 'cloud-runner-locking-core'
          - 'cloud-runner-locking-get-locked'
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn run test "${{ matrix.test }}" --detectOpenHandles --forceExit --runInBand
        timeout-minutes: 60
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          PROJECT_PATH: test-project
          TARGET_PLATFORM: StandaloneWindows64
          cloudRunnerTests: true
          versioning: None
          KUBE_STORAGE_CLASS: local-path
          PROVIDER_STRATEGY: local-docker
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GIT_PRIVATE_TOKEN: ${{ secrets.GIT_PRIVATE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GIT_PRIVATE_TOKEN }}


