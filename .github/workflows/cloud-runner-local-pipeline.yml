name: Cloud Runner Local

on:
  push: { branches: ['!cloud-runner-develop', '!cloud-runner-preview', '!main'] }
#  push: { branches: [main] }
#  pull_request:
#    paths-ignore:
#      - '.github/**'

jobs:
  integrationTests:
    name: Integration Tests
    if: github.event.event_type != 'pull_request_target'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cloudRunnerCluster:
          - local-docker
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    # steps
    steps:
      - name: Checkout (default)
        uses: actions/checkout@v2
        with:
          lfs: true
      - run: yarn
      - run: yarn run cli --help
      - run: yarn run test-i --detectOpenHandles --forceExit --runInBand
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          PROJECT_PATH: ${{ matrix.projectPath }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_PLATFORM: ${{ matrix.targetPlatform }}
          cloudRunnerTests: true
          versioning: None
          CLOUD_RUNNER_CLUSTER: ${{ matrix.cloudRunnerCluster }}
  buildTests:
    name: Build Tests
    if: github.event.event_type != 'pull_request_target'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cloudRunnerCluster:
          - local-docker
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - WebGL # WebGL.
          - iOS # Build an iOS player.
          - Android # Build an Android .apk.
          #          - StandaloneWindows # Build a Windows standalone.
          #          - WSAPlayer # Build an Windows Store Apps player.
          #          - PS4 # Build a PS4 Standalone.
          #          - XboxOne # Build a Xbox One Standalone.
          #          - tvOS # Build to Apple's tvOS platform.
          #          - Switch # Build a Nintendo Switch player
    # steps
    steps:
      - name: Checkout (default)
        uses: actions/checkout@v2
        with:
          lfs: true
      - uses: ./
        id: unity-build
        timeout-minutes: 25
        env:
          CLOUD_RUNNER_BRANCH: ${{ github.ref }}
          CLOUD_RUNNER_DEBUG: true
          CLOUD_RUNNER_DEBUG_TREE: true
          DEBUG: true
          PROJECT_PATH: test-project
          UNITY_VERSION: 2019.3.15f1
          USE_IL2CPP: false
        with:
          cloudRunnerTests: true
          versioning: None
          projectPath: ${{ matrix.projectPath }}
          gitPrivateToken: ${{ secrets.GITHUB_TOKEN }}
          targetPlatform: ${{ matrix.targetPlatform }}
          cloudRunnerCluster: ${{ matrix.cloudRunnerCluster }}
      - run: |
          mv ./cloud-runner-cache/${{ steps.unity-build.outputs.CACHE_KEY }}/build/build-${{ steps.unity-build.outputs.BUILD_GUID }}.tar.lz4 build-${{ steps.unity-build.outputs.BUILD_GUID }}.tar.lz4
          ls
      ###########################
      #          Upload         #
      ###########################
      - uses: actions/upload-artifact@v2
        with:
          name: Local Build (${{ matrix.targetPlatform }})
          path: build-${{ steps.unity-build.outputs.BUILD_GUID }}.tar.lz4
          retention-days: 14
