name: Actions ðŸ˜Ž

on:
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  PROJECT_PATH: test-project

jobs:
  activate:
    name: Activate Unity
    runs-on: ubuntu-latest
    steps:
      - uses: webbertakken/unity-activate@v1

  test:
    name: Test the project
    needs: [activate]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: webbertakken/unity-activate@v1
      - uses: webbertakken/unity-test-runner@master
      - uses: webbertakken/unity-return-license@v1
        if: always()

  buildForWebGL:
    name: Build for WebGL
    needs: [test]
    runs-on: ubuntu-latest
    steps: # webbertakken/unity-builder@v0.3-webgl
      - uses: actions/checkout@v1
      - uses: webbertakken/unity-activate@v1
      - uses: ./
      - uses: webbertakken/unity-return-license@v1
        if: always()

  buildForAndroid:
    name: Build for Android
    needs: [test]
    runs-on: ubuntu-latest
    steps: # webbertakken/unity-builder@v0.3-android
      - uses: actions/checkout@v1
      - uses: webbertakken/unity-activate@v1
      - uses: ./
      - uses: webbertakken/unity-return-license@v1
        if: always()

  uploadBuildArtifacts:
    name: Upload Build Artifacts
    needs:
      - buildForWebGL
      - buildForAndroid
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact@v1
        with:
          name: Builds
          path: builds
