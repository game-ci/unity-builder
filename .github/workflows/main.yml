name: Actions ðŸ˜Ž

on:
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  PROJECT_PATH: test-project

jobs:
  #  test:
  #    name: Test the project
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v1
  #      - uses: webbertakken/unity-activate@v1
  #      - uses: webbertakken/unity-test-runner@v1.1
  #      - uses: webbertakken/unity-return-license@v1
  #        if: always()
  #      - uses: actions/upload-artifact@v1
  #        with:
  #          name: Test results
  #          path: artifacts/

  buildForWebGL:
    name: Build for WebGL
    #    needs: [test]
    runs-on: ubuntu-latest
    steps: # webbertakken/unity-builder@v0.3-webgl
      - uses: actions/checkout@v1
      - uses: webbertakken/unity-activate@v1
      - uses: ./
        with:
          projectPath: test-project
          targetPlatform: WebGL
          unityVersion: 2019.2.11f1
      - uses: webbertakken/unity-return-license@v1
        if: always()
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build
#  buildForAndroid:
#    name: Build for Android
#    #    needs: [test]
#    runs-on: ubuntu-latest
#    steps: # webbertakken/unity-builder@v0.3-android
#      - uses: actions/checkout@v1
#      - uses: webbertakken/unity-activate@v1
#      - uses: ./
#      - uses: webbertakken/unity-return-license@v1
#        if: always()
#      - uses: actions/upload-artifact@v1
#        with:
#          name: Build
#          path: build
